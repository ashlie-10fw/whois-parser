# This file is autogenerated. Do not edit it manually.
# If you want change the content of this file, edit
#
#   /spec/fixtures/responses/whois.ja.net/gov.uk/status_registered.expected
#
# and regenerate the tests with the following rake task
#
#   $ rake spec:generate
#

require 'spec_helper'

describe "whois.ja.net", :aggregate_failures do

  subject do
    file = fixture("responses", "whois.ja.net/gov.uk/status_registered.txt")
    part = Whois::Record::Part.new(body: File.read(file), host: "whois.ja.net")
    Whois::Parser.parser_for(part)
  end

  it "matches status_registered.expected" do
    expect(subject.status).to eq(:registered)
    expect(subject.available?).to eq(false)
    expect(subject.registered?).to eq(true)
    expect(subject.created_on).to be_a(Time)
    expect(subject.created_on).to eq(DateTime.parse("2003-09-17"))
    expect(subject.updated_on).to be_a(Time)
    expect(subject.updated_on).to eq(DateTime.parse("2010-01-13"))
    expect(subject.expires_on).to be_a(Time)
    expect(subject.expires_on).to eq(DateTime.parse("2011-03-30"))
    expect(subject.nameservers).to be_a(Array)
    expect(subject.nameservers.size).to eq(8)
    expect(subject.nameservers[0]).to be_a(Whois::Parser::Nameserver)
    expect(subject.nameservers[0].name).to eq("eur5.akam.net")
    expect(subject.nameservers[1]).to be_a(Whois::Parser::Nameserver)
    expect(subject.nameservers[1].name).to eq("eur6.akam.net")
    expect(subject.nameservers[2]).to be_a(Whois::Parser::Nameserver)
    expect(subject.nameservers[2].name).to eq("ns1-173.akam.net")
    expect(subject.nameservers[3]).to be_a(Whois::Parser::Nameserver)
    expect(subject.nameservers[3].name).to eq("ns1-31.akam.net")
    expect(subject.nameservers[4]).to be_a(Whois::Parser::Nameserver)
    expect(subject.nameservers[4].name).to eq("usc4.akam.net")
    expect(subject.nameservers[5]).to be_a(Whois::Parser::Nameserver)
    expect(subject.nameservers[5].name).to eq("use10.akam.net")
    expect(subject.nameservers[6]).to be_a(Whois::Parser::Nameserver)
    expect(subject.nameservers[6].name).to eq("usw2.akam.net")
    expect(subject.nameservers[7]).to be_a(Whois::Parser::Nameserver)
    expect(subject.nameservers[7].name).to eq("usw4.akam.net")
  end
end
